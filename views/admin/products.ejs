<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <link rel="stylesheet" href="styles.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <style>
        body {
            background-color: #111;
            display: flex;
            margin: 0;
            font-family: 'Poppins', sans-serif;
        }
        .sidebar {
            width: 250px;
            background: #828282;
            color: white;
            height: 100vh;
            padding-top: 20px;
            position: fixed;
            text-align: center;
        }
        .profile-section {
            padding: 20px;
        }
        .profile-pic {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            object-fit: cover;
        }
        .sidebar ul {
            list-style: none;
            padding: 0;
        }
        .sidebar ul li {
            padding: 10px;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: start;
        }
        .sidebar ul li:hover {
            background: #150107;
        }
        .sidebar ul li a {
            text-decoration: none;
            color: white;
            font-weight: 500;
            font-size: 16px;
            display: flex;
            align-items: center;
        }
        .sidebar ul li a i {
            margin-right: 15px;
        }
        .content {
            margin-left: 250px;
            padding: 20px;
            width: 100%;
        }
        
        .header {
            background: #ffffff;
            padding: 30px;
            text-align: center;
            width: calc(100% - 250px);
            position: fixed;
            top: 0;
            left: 250px;
            z-index: 1000;
        }
        .header h1 {
            color: #000000;
            margin: 0;
        }
        #button {
            border-radius: 30px;
            background-color: rgb(141, 141, 141);
            margin-top: 30px;
            padding: 10px 20px;
            border: none;
            font-size: 16px;
            cursor: pointer;
            transition: 0.3s;
        }
        #button:hover {
            background-color: black;
            color: #ffffff;
        }

        /* Table Styles */
        .table-container {
            margin-top: 10px;
            overflow-x: auto;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            background: white;
            text-align: left;
        }
        th, td {
            padding: 10px;
            border: 1px solid #ddd;
        }
        th {
            background: #f4f4f4;
        }
        .action-buttons button {
            border: none;
            padding: 5px 10px;
            cursor: pointer;
            color: white;
            font-size: 14px;
            margin: 2px;
            border-radius: 4px;
        }
        .add-offer {
            background: #00BCD4;
        }
        .remove-offer {
            background: #00BCD4;
        }
        .block {
            background: #f44336;
        }
        .unblock {
            background: #4CAF50;
        }
        .edit {
            background: #03A9F4;
        }
        @media (max-width: 768px) {
            .content {
                margin-left: 0;
            }
            .header {
                width: 100%;
                left: 0;
            }
            .sidebar {
                width: 100px;
            }
            .sidebar ul li a {
                font-size: 12px;
                flex-direction: column;
                text-align: center;
            }
            .sidebar ul li a i {
                margin-right: 0;
            }
        }


/* Beautiful button styles for all buttons */
action-buttons button {
    border: none; /* Remove border */
    padding: 10px 20px; /* Reduced padding for smaller buttons */
    cursor: pointer;
    color: white; /* White text for all buttons */
    font-size: 12px; /* Smaller font size */
    margin: 5px; /* Reduced margin for tighter spacing */
    border-radius: 8px; /* Slightly smaller rounded corners */
    font-weight: bold;
    transition: all 0.3s ease; /* Smooth transition for hover effects */
    box-shadow: 3px 3px 8px rgba(0, 0, 0, 0.2); /* Subtle shadow for depth */
    display: inline-flex; /* Align text and icons better */
    align-items: center;
    justify-content: center;
    min-width: 90px; /* Reduced minimum width for smaller buttons */
}

/* Add Offer Button */
.add-offer {
    background: #00060b; /* Blue */
}

.add-offer:hover {
    background: #eef6ff; /* Darker blue */
    transform: translateY(-3px); /* Lift effect on hover */
    box-shadow: 6px 6px 15px rgba(0, 0, 0, 0.3); /* Enhanced shadow on hover */
}

/* Remove Offer Button */
.remove-offer {
    background: #00e5ff; /* Teal */
}

.remove-offer:hover {
    background: #006b7b; /* Darker teal */
    transform: translateY(-3px);
    box-shadow: 6px 6px 15px rgba(0, 0, 0, 0.3);
}

/* Block Button */
.block {
    background: #ff0015; /* Bright red */
}

.block:hover {
    background: #50020a; /* Darker red */
    transform: translateY(-3px);
    box-shadow: 6px 6px 15px rgba(0, 0, 0, 0.3);
}

/* Unblock Button */
.unblock {
    background: #5bffb8; /* Bright green */
}

.unblock:hover {
    background: #024712; /* Darker green */
    transform: translateY(-3px);
    box-shadow: 6px 6px 15px rgba(0, 0, 0, 0.3);
}

/* Edit Button */
.edit {
    background: #FFC107; /* Golden Yellow */
    color: white; /* White text */
}

.edit:hover {
    background: #E0A800; /* Darker Yellow */
    transform: translateY(-3px);
    box-shadow: 6px 6px 15px rgba(0, 0, 0, 0.3);
}
  
.pagination {
    margin-top: 20px;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 10px;
}

.page-link {
    padding: 8px 12px;
    background-color: #007BFF;
    color: white;
    text-decoration: none;
    border-radius: 5px;
    transition: background-color 0.3s ease;
}

.page-link:hover {
    background-color: #0056b3;
}

.page-link.active {
    background-color: #0056b3;
    font-weight: bold;
}

.search-bar {
    margin-top: 40px;  /* Adjust this value if needed */
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
}

.search-bar input[type="text"] {
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    font-size: 14px;
    width: 250px;
    margin-right: 10px;
}

.search-bar button {
    padding: 10px 20px;
    background-color: #007BFF;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 14px;
    transition: background-color 0.3s ease;
}

.search-bar button:hover {
    background-color: #0056b3;
}

/* Pagination Styles */
.pagination {
    text-align: center;
    margin-top: 20px;
}

.pagination button {
    background: #007BFF;
    color: white;
    border: none;
    padding: 8px 14px;
    font-size: 16px;
    cursor: pointer;
    border-radius: 5px;
    margin: 5px;
    transition: 0.3s;
}

.pagination button:hover {
    background: #0056b3;
}.hidden { display: none; } /* Hide elements when necessary */
.no-results { text-align: center; color: red; font-weight: bold; }
a{
    text-decoration-line: none;
    color: white;
}
.Delete{
    background-color: #ff5e00;
    color: white;

}
.Delete:hover{
    background-color: #b2b2b2;
}
.block,.unblock{
    border-radius: 3px;
    border: none;
    color: white;
}

/* General Button Styles */
.custom-btn {
    display: inline-block;
    padding: 10px 20px;
    font-size: 14px;
    font-weight: bold;
    text-align: center;
    text-decoration: none;
    border-radius: 5px;
    border: none;
    cursor: pointer;
    transition: background 0.3s ease-in-out, transform 0.2s;
}

/* Block Button - Red */
.custom-btn.red {
    background-color: #ff4d4d;  /* Bright Red */
    color: white;
}

.custom-btn.red:hover {
    background-color: #cc0000; /* Darker Red */
    transform: scale(1.05);
}

/* Unblock Button - Green */
.custom-btn.green {
    background-color: #4CAF50;  /* Green */
    color: white;
}

.custom-btn.green:hover {
    background-color: #2e8b57; /* Darker Green */
    transform: scale(1.05);
}
.pagination {
    text-align: center;
    margin-top: 20px;
}

.page-link {
    display: inline-block;
    padding: 8px 12px;
    margin: 5px;
    text-decoration: none;
    background-color: #f0f0f0;
    color: black;
    border-radius: 5px;
}

.page-link.active {
    background-color: #007bff;
    color: white;
    font-weight: bold;
}

.page-link:hover {
    background-color: #ddd;
}



    </style>
</head>
<body>
    <div class="sidebar">
        <div class="profile-section">
            <img src="/images/WhatsApp Image 2025-03-04 at 21.15.51_2d23995d.jpg" alt="Profile Picture" class="profile-pic">
            <h3>Aifa Sana</h3>
        </div>
        <ul>
            <li><a href="/admin/dashboard"><i class="fa-solid fa-gauge"></i> Dashboard</a></li>
            <li><a href="/admin/customers"><i class="fa-solid fa-users"></i> Customers</a></li>
            <li><a href="/admin/category"><i class="fa-solid fa-layer-group"></i> Genre</a></li>
            <li><a href="/admin/addProducts/"><i class="fa-solid fa-plus-circle"></i> Add Products</a></li>
            <li><a href="/admin/products"><i class="fa-solid fa-box"></i> Products</a></li>
            <li><a href="/admin/referral-offers"><i class="fas fa-chart-bar"></i> Refferal</a></li>
            <li><a href="/admin/coupon"><i class="fa-solid fa-tag"></i> Coupons</a></li>
            <li><a href="/admin/banner"><i class="fa-solid fa-image"></i> Banner</a></li>
            <li><a href="/admin/orders"><i class="fa-solid fa-cart-shopping"></i> Orders</a></li>
            <li><a href="/admin/stock-management"><i class="fa-solid fa-boxes-stacked"></i> Stock Management</a></li>
            <li><a href="/admin/sales-report"><i class="fas fa-chart-bar"></i> Sales Report</a></li>
            <li><a href="/admin/wallet-transactions"><i class="fa-solid fa-wallet"></i> Wallet Management</a></li>
            <div>
                <form action="/admin/logout" method="GET">
                    <button type="submit" id="button">Logout</button>
                </form>
            </div>
        </ul>
    </div>
    
    <div class="content">
        <div class="header">
            <h1>PRODUCTS</h1>    
        </div>
        <div class="search-bar">
            <form action="/admin/products" method="GET">
                <div class="search-bar">
                    <input type="text" id="searchInput" placeholder="Search Products or Categories..." class="search-box">
                    <button type="button" onclick="searchProducts()">Search</button>
                </div>
                

            </form>
        </div>
        

        <div class="table-container">
            <table>
                <thead>
                    <tr> <th>Number</th>
                        <th>Product Name</th>
                        <th>Category</th>
                        <th>Sale Price</th>
                        <th>Offer</th>
                        <th>Offer</th>
                        <th>Quantity</th>
                        <th>Action</th>
                        <th>Edit/Delete</th>
                    </tr>
                </thead>
                <tbody id="tableBody">
                    <% for (let i = data.length - 1; i >= 0; i--) { %>
                        <tr>
                            <td><%= data.length - i %></td> 
                            <td><%= data[i].productName %></td>
                            <td><%= data[i].category.name %></td>
                            <td><%= data[i].salePrice ? data[i].salePrice : '0' %></td>

                            
                                <td><%= data[i].productOffer ? data[i].productOffer + '%' : '0%' %></td>

                            </td>
                            <td>
                                <% if (!data[i].productOffer || data[i].productOffer === 0) { %>
                                    <button class="custom-btn green" onclick="addOffer('<%= data[i]._id %>')">
                                        Add Offer
                                    </button>
                                <% } else { %>
                                    <button class="custom-btn red" onclick="removeOffer('<%= data[i]._id %>')">
                                        Remove Offer
                                    </button>
                                <% } %>
                            </td>
                            <td><%= data[i].quantity %></td>
                            <td>
                                <form id="blockUnblockForm-<%= data[i]._id %>" action="<%= data[i].isBlocked ? '/admin/unblockProduct' : '/admin/blockProduct' %>" method="POST">
                                    <input type="hidden" name="id" value="<%= data[i]._id %>">
                                    <button type="button" class="<%= data[i].isBlocked ? 'custom-btn green' : 'custom-btn red' %>"
                                        onclick="confirmBlockUnblock('<%= data[i]._id %>',`<%= data[i].isBlocked %>`)">
                                        <%= data[i].isBlocked ? 'Unblock' : 'Block' %>
                                    </button>
                                </form>
                            </td>
                            
                            <td>
                                <div class="action-buttons">
                                    <button class="edit"><a href="/admin/editProduct?id=<%=data[i]._id%>">Edit</a></button>
                                    <button class="Delete" onclick="deleteProduct('<%= data[i]._id %>')">Delete</button>
                                </div>
                            </td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </div>
                   
        </tbody>
    
            </table>
    
       
            <div class="pagination">
                <% if (currentPage > 1) { %>
                    <a href="?page=<%= currentPage - 1 %>" class="page-link">Previous</a>
                <% } %>
            
                <% for (let i = 1; i <= totalPages; i++) { %>
                    <a href="?page=<%= i %>" class="page-link <%= i === currentPage ? 'active' : '' %>"><%= i %></a>
                <% } %>
            
                <% if (currentPage < totalPages) { %>
                    <a href="?page=<%= currentPage + 1 %>" class="page-link">Next</a>
                <% } %>
            </div>
        </div>
    
    </div>
        </div>
    </div>
</body>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>

// ----------------------------------------------------------------------------------------------------------------

function confirmBlockUnblock(productId, isBlocked) {
    const actionText = isBlocked ? "unblock" : "block";
    Swal.fire({
        title: `Are you sure?`,
        text: `Do you really want to ${actionText} this product?`,
        icon: "warning",
        showCancelButton: true,
        confirmButtonText: `Yes, ${actionText} it!`,
        cancelButtonText: "Cancel"
    }).then((result) => {
        if (result.isConfirmed) {
            document.getElementById(`blockUnblockForm-${productId}`).submit();
        }
    });
}


 // -------------------------------------------------------------------------------------------------------


async function addOffer(productId) {
            const { value: amount } = await Swal.fire({
                title: 'Offer in percentage',
                input: 'number',
                inputPlaceholder: '% Percentage',
                inputAttributes: {
                    min: 0,
                    max: 100,
                    step: 1
                }
            });

            if (amount) {
                $.ajax({
                    url: '/admin/addProductOffer',
                    method: 'POST',
                    data: {
                        percentage: amount,
                        productId: productId
                    },
                    success: (response) => {
                        if (response.status === true) {
                            Swal.fire("Offer added", "The offer has been added successfully.", "success");
                            location.reload(); 
                        } else {
                            Swal.fire("Failed", response.message || "There was an issue adding the offer.", "error");
                        }
                    },
                    error: () => {
                        Swal.fire("Failed", "An error occurred while adding the offer.", "error");
                    }
                });
            }
        }


// -------------------------------------------------------------------------------------------------------
async function fetchProducts() {
    try {
        const response = await fetch('http://localhost:3000/admin/products');
        if (response.ok) {
            const products = await response.json();
            const productTable = document.querySelector("#tableBody");
            productTable.innerHTML = ''; 
            products.forEach(product => {
                const row = document.createElement('tr');
                row.setAttribute('data-product-id', product._id); 
                row.innerHTML = `
                    <td>${product.productName}</td>
                    <td>${product.category ? product.category.name : "No Category"}</td>
                    <td>${product.salePrice}</td>
                    <td>${product.productOffer}</td>
                    <td>${product.offer}</td>
                    <td>${product.quantity}</td>
                    <td>
                        <button class="delete" onclick="deleteProduct('${product._id}')">Delete</button>
                    </td>
                `;
                productTable.appendChild(row);
            });
        } else {
            console.error('Failed to fetch products');
        }
    } catch (err) {
        console.error('Error fetching products:', err);
    }
}
// -------------------------------------------------------------------------------------------------------
async function deleteProduct(productId) {
    Swal.fire({
        title: 'Are you sure?',
        text: 'You won\'t be able to revert this!',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, delete it!'
    }).then(async (result) => {
        if (result.isConfirmed) {
            try {
                const response = await fetch('http://localhost:3000/admin/deleteProduct', {
                    method: 'DELETE',  
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ id: productId })  
                });

                if (response.ok) {
                    Swal.fire('Deleted!', 'Product has been deleted successfully.', 'success');
                    setTimeout(() => {
                        location.reload();
                    }, 2000);

                  
                    const rowToDelete = document.querySelector(`tr[data-product-id="${productId}"]`);
                    if (rowToDelete) {
                        rowToDelete.remove();
                    }

               
                    fetchProducts(); 

                } else {
                    Swal.fire('Error!', 'Failed to delete product.', 'error');
                }
            } catch (err) {
                Swal.fire('Error!', 'Failed to connect to the server.', 'error');
            }
        }
    });
}

// -------------------------------------------------------------------------------------------------------
function searchProducts() {
        const searchQuery = document.getElementById('searchInput').value;
        if (searchQuery.trim() === "") {
            alert("Please enter a search term.");
            return;
        }
        window.location.href = `/admin/products?page=1&search=${searchQuery}`;
    }
    document.getElementById('searchInput').addEventListener('input', function () {
        const searchQuery = this.value;
        if (searchQuery.trim() === "") {
            window.location.href = '/admin/products?page=1';
        }
    });

// -------------------------------------------------------------------------------------------------------



// -------------------------------------------------------------------------------------------------------
async function removeOffer(productId) {
    try {
        const result = await Swal.fire({
            title: 'Remove Offer',
            text: "Are you sure you want to remove the offer?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: 'd33',
            confirmButtonText: 'Yes, remove it!',
            timer: 6000,
            timeProgressBar: true
        });

        if (result.isConfirmed) {
            const response = await $.ajax({
                url: "/admin/removeProductOffer",
                method: 'POST',
                data: { productId }
            });

            if (response.status === true) {
                Swal.fire('Removed', 'The offer has been removed', 'success');
                location.reload();
            } else {
                Swal.fire('Failed', 'There was an issue removing the offer', 'error');
            }
        }
    } catch (error) {
        console.error(error);
        Swal.fire("Error", "An error occurred during the process.", "error");
    }
}
// -------------------------------------------------------------------------------------------------------
</script>
</html>